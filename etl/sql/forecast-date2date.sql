WITH CTE_CALENDAR AS
(SELECT  
		CAD.WM_YR_WK,
		MONTH(CAD.GREGORIAN_DATE) AS MES,
		(YEAR(CAD.GREGORIAN_DATE) * 100 +  MONTH(CAD.GREGORIAN_DATE)) AS YM,
		COUNT(CAD.WM_YR_WK) AS DIAS,
		SUM(CAD.SAT_MULT) AS SAT_MULT,
		SUM(CAD.SUN_MULT) AS SUN_MULT,
		SUM(CAD.MON_MULT) AS MON_MULT,
		SUM(CAD.TUE_MULT) AS TUE_MULT,
		SUM(CAD.WED_MULT) AS WED_MULT,
		SUM(CAD.THU_MULT) AS THU_MULT,
		SUM(CAD.FRI_MULT) AS FRI_MULT
	FROM   MX_CF_VM.CALENDAR_DAY  AS CAD
	INNER JOIN (SELECT  --Sub query para fijar rango de semanas a consultar para FCST
                                    TB1.WM_YR_WK,
                                    TB1.MES,
									TB1.R
                                   FROM  (
                                                    SELECT
													DISTINCT
                                                     CDA.WM_YR_WK,
                                                     MONTH(CDA.GREGORIAN_DATE) AS MES,
                                                     CAST(DENSE_RANK() OVER ( ORDER BY CDA.WM_YR_WK) AS INTEGER)  -1 AS R
                                                     FROM MX_CF_VM.CALENDAR_DAY AS CDA
                                                     WHERE CDA.GREGORIAN_DATE >=  DATE
                                                     ) AS TB1
                                     WHERE TB1.R BETWEEN 1 AND 16 --Periodo con FCST elegible limitado a 16 WM_WK
									 --AND TB1.MES >= MONTH(DATE) + 2  --Regla para traer semanas restantes luego de los 2 primeros meses
									 ) AS RW 
	ON CAD.WM_YR_WK = RW.WM_YR_WK
	AND MONTH(CAD.GREGORIAN_DATE) = RW.MES
	WHERE CAD.GREGORIAN_DATE BETWEEN ?FCST_INI_DATE AND ?FCST_END_DATE --Elige fechas entre las 16 semanas WM dadas.
	GROUP BY 1, 2, 3
),

--REGIONES NIELSEN (REGION NIELSEN)
REGI_NIELSEN AS
(
	SELECT
  	CAST(DET AS NUMBER) AS STORE_NBR,
		CAST(FORMATO AS CHAR(20)) AS FORMATO,
		CAST(STATE AS CHAR(20)) AS ESTADO,
		CAST(REG AS NUMBER) AS REG_NIELSEN
	FROM 
		WM_AD_HOC.CATALOG_STORE_2S AS CS2
	WHERE 
		FORMATO IN ('SUPERCENTER', 'SUPERAMA')
	
	UNION 
	
	SELECT
  	CAST(WM_TIENDA AS NUMBER) AS STORE_NBR,
		CAST(WM_NOM_NEG AS CHAR(20)) AS FORMATO,
		CAST(WM_EDO AS CHAR(20)) AS ESTADO,
		CAST(REGIONAL  AS NUMBER) AS REG_NIELSEN
	FROM
  	WM_AD_HOC.TABLA_TIENDAS AS TT
	WHERE
		FORMATO IN ('BOD', 'MIB', 'BAE')
),
	
--RELACION TIENDA-ESTADO UNICOS
TDA_EDO AS
(
SELECT DISTINCT
	WM_TIENDA AS STORE_NBR,
	WM_EDO AS ESTADO,
	CASE 
		WHEN WM_EDO = 'Baja California Sur' THEN 'BCS'
		ELSE EDO3D
	END AS STATE_CODE
FROM
			WM_AD_HOC.T_TDAS
),

-- SHIPS POR MES, ITEM, TIENDA, CEDIS
TAB AS 
(
		SELECT
		SDS.ITEM_NBR,
		SDS.STORE_NBR,
		(SDS.SOURCE_ID) - 70000 AS CEDIS,
		SUM(
			SDS.SAT_SHIP_QTY * T5.SAT_MULT +
			SDS.SUN_SHIP_QTY * T5.SUN_MULT + 
			SDS.MON_SHIP_QTY * T5.MON_MULT + 
			SDS.TUE_SHIP_QTY * T5.TUE_MULT + 
			SDS.WED_SHIP_QTY * T5.WED_MULT + 
			SDS.THU_SHIP_QTY * T5.THU_MULT + 
			SDS.FRI_SHIP_QTY * T5.FRI_MULT
		) AS SHIP_QTY
	FROM 
		MX_CF_VM.SKU_DLY_SHIP AS SDS
		INNER JOIN (
										SELECT
											WM_YR_WK,
											MONTH(GREGORIAN_DATE) AS MES,
											SUN_MULT,
											MON_MULT,
											TUE_MULT,
											WED_MULT,
											THU_MULT,
											FRI_MULT,
											SAT_MULT
										FROM 
											  MX_CF_VM.CALENDAR_DAY
										WHERE
											GREGORIAN_DATE BETWEEN ADD_MONTHS(DATE, -6) AND DATE --Traer solo 6 meses
									) AS T5
			ON SDS.WM_YR_WK = T5.WM_YR_WK
		GROUP BY 1, 2, 3
		HAVING SHIP_QTY <> 0 AND CEDIS <> 600 
),

--CEDIS ORIGEN
CEDIS AS
(
	SELECT 
		ITEM_NBR,
		STORE_NBR,
		CEDIS
	FROM (
		SELECT
			TAB.*,
			ROW_NUMBER() OVER(
				PARTITION BY ITEM_NBR, STORE_NBR
				ORDER BY SHIP_QTY DESC
			) AS RNK
		FROM TAB 
	) AS TAB_2
	WHERE RNK = 1
),

--FCST BASE
FB  AS 
(
SELECT
FB.ITEM_NBR,
FB.STORE_NBR,
FB.FCST_WM_YR_WK,
FB.WM_YR_WK,
CTE.MES,
YM,
ZEROIFNULL 
	(	
		CASE 
			WHEN FB.FCST_WM_YR_WK = FB.WM_YR_WK THEN SUM (FB.SALES_FCST_EACH_QTY) 
			WHEN FB.FCST_WM_YR_WK = (
																			SELECT CAD.WM_YR_WK 
																			FROM 	 MX_CF_VM.CALENDAR_DAY  AS CAD
																			WHERE  GREGORIAN_DATE = DATE
																				) 
							AND FB.WM_YR_WK >  (
																SELECT CAD.WM_YR_WK 
																 FROM 	MX_CF_VM.CALENDAR_DAY AS CAD
																 WHERE GREGORIAN_DATE = DATE
																)
		THEN SUM (FB.SALES_FCST_EACH_QTY) 
		END 
	) AS FORECAST_BASE_EACHES
FROM	MX_CF_VM.STORE_ITEM_FCST_WK_CONV AS FB
	LEFT JOIN CTE_CALENDAR AS CTE
	ON FB.WM_YR_WK = CTE.WM_YR_WK
WHERE  FB.JDA_FCST_TYPE_CD NOT IN (5)
			AND FB.FCST_WM_YR_WK IN (
																			SELECT WM_YR_WK 
																			 FROM MX_CF_VM.CALENDAR_DAY 
																			 WHERE GREGORIAN_DATE = DATE
																			)
		AND FB.WM_YR_WK IN (SELECT WM_YR_WK FROM CTE_CALENDAR)
	GROUP BY 1,2,3,4,5,6
),

--FCST PROMO
FP AS
(
		SELECT 
			STORE_NBR,
			ITEM_NBR,
			FCST_WM_YR_WK,
			FP.WM_YR_WK,
			CTE.MES,
			YM,
			ZEROIFNULL 
				(
				CASE 
					WHEN FCST_WM_YR_WK = FP.WM_YR_WK THEN SUM (SALES_FCST_EACH_QTY) 
					WHEN FCST_WM_YR_WK = (SELECT WM_YR_WK FROM MX_CF_VM.CALENDAR_DAY WHERE GREGORIAN_DATE = DATE)
						AND FP.WM_YR_WK > (SELECT WM_YR_WK FROM MX_CF_VM.CALENDAR_DAY WHERE GREGORIAN_DATE = DATE) 
						THEN SUM (SALES_FCST_EACH_QTY) 
				END
				) AS FORECAST_PROMO_EACHES
	FROM
			MX_CF_VM.STORE_ITEM_FCST_WK_CONV AS FP
	LEFT JOIN CTE_CALENDAR AS CTE
		ON FP.WM_YR_WK = CTE.WM_YR_WK
	WHERE
			JDA_FCST_TYPE_CD = 5
			AND FCST_WM_YR_WK IN (SELECT WM_YR_WK FROM    MX_CF_VM.CALENDAR_DAY WHERE GREGORIAN_DATE = DATE)
			AND FP.WM_YR_WK IN (SELECT WM_YR_WK FROM CTE_CALENDAR) 
			GROUP BY
			1,2,3,4,5,6
),

--ITEM DETALLE
ITEM AS
(
SELECT 
	T1.VENDOR_NBR,
	T1.WHPK_QTY,
	T1.VNPK_QTY,
	T1.DEPT_NBR,
	T1.ITEM_NBR,
	T1.OLD_NBR,
	T1.REPL_GROUP_NBR,
	T1.UPC_NBR,
	(T1.VNPK_COST_AMT*1.00 / NULLIFZERO(T1.VNPK_QTY*1.00)) AS COSTO,
	SUBSTR (T1.FINELINE_NBR,3,2) AS CAT_NBR,
	T1.BASE_UNIT_RTL_AMT AS PRECIO,
	T1.CUST_BASE_RTL_AMT AS PRECIO_IVA,
	T1.WHSE_ALIGN_TYPE_CD AS WHSE_ALIGN,
	T1.ITEM_TYPE_CODE AS TIPO_ART,
	T1.ITEM1_DESC,
	CASE WHEN 
							T1.BRAND_ID IN (
								312624,312625,312626,312627,312628,312629,312630,312631,312648,314614,315263,316405,317731,321588,328774,332303,335021,335945,361672
							) THEN 'NUESTRAS MARCAS'
					WHEN T1.BRAND_ID IN (
								324092,324501,335023,353473,355413,355414,355415,355416,355417,355418,355419,355420,355421,355422,355423,355424,355425,355426,355427,
								355428,355429,355430,355431,355432,355433,355434,355435,355436,355437,355962,355963,355964,355965,355966,355967,355968,355969,355970,
								355971,355972,355973,355975,355976,355977,355978,355979,355981,355982,355983,355984,355985,355986,355987,355988,355989,355990,355991,
								356001,356002,356018,357117,357973,361429,361430,361517,361612,361686,361693,363811,361769
							) THEN 'MARCA PROPIA' 
					ELSE 'REGULAR' 
	END	AS MARCAS_ESTRATEGICAS
FROM	MX_CF_VM.ITEM AS T1
),


--TIENDA - FORMATO
STORE AS
(
SELECT 
	TS.*, 
	CASE
		WHEN TS.TRAIT_NBR=297 THEN 'SUPERCENTER' 
		WHEN TS.TRAIT_NBR=9 THEN 'BODEGA'
		WHEN TS.TRAIT_NBR=11 THEN 'SUPERAMA'
		WHEN TS.TRAIT_NBR=1312 THEN 'MIBODEGA'
		WHEN TS.TRAIT_NBR IN (969,136) THEN 'BAE' 
		ELSE 'OTRO' 
	END AS FORMATO
FROM MX_CF_VM.TRAIT_STORE AS TS
),

--Consulta CTE_FCST
CTE_FCST AS 
(
SELECT
	FB.ITEM_NBR,
	FB.FCST_WM_YR_WK,
	FB.WM_YR_WK,
	FB.MES,
	FB.YM,
	IT.VENDOR_NBR,
	IT.WHPK_QTY,
	IT.VNPK_QTY,
	IT.DEPT_NBR,
	IT.OLD_NBR,
	IT.REPL_GROUP_NBR,
	IT.UPC_NBR,
	IT.COSTO,
	IT.WHSE_ALIGN,
	IT.ITEM1_DESC,
	IT.TIPO_ART,
	IT.CAT_NBR,
	IT.PRECIO,
	IT.PRECIO_IVA,
	IT.MARCAS_ESTRATEGICAS,
	ST.FORMATO,
	RN.REG_NIELSEN,
	TE.ESTADO,
	CDS.CEDIS,
	CAST(SUM(FB.FORECAST_BASE_EACHES) AS DECIMAL (15,4)) AS FORECAST_BASE_EACHES, 
	ZEROIFNULL (SUM(FP.FORECAST_PROMO_EACHES)) AS FORECAST_PROMO_EACHES 
FROM	FB
	LEFT JOIN FP
		ON FB.STORE_NBR = FP.STORE_NBR 
		AND FB.ITEM_NBR = FP.ITEM_NBR 
		AND FB.FCST_WM_YR_WK=FP.FCST_WM_YR_WK 
		AND FB.WM_YR_WK=FP.WM_YR_WK 
		AND FB.MES = FP.MES 
	LEFT JOIN ITEM AS IT
		ON FB.ITEM_NBR = IT.ITEM_NBR
	LEFT JOIN STORE AS ST
		ON FB.STORE_NBR = ST.STORE_NBR
	LEFT JOIN REGI_NIELSEN AS RN
		ON FB.STORE_NBR = RN.STORE_NBR
	LEFT JOIN TDA_EDO AS TE
		ON FB.STORE_NBR = TE.STORE_NBR
    LEFT JOIN CEDIS AS CDS
		--ON FB.SMTR = CDS.SMTR 
		ON FB.STORE_NBR = CDS.STORE_NBR 
		AND FB.ITEM_NBR = CDS.ITEM_NBR
WHERE ST.FORMATO <> 'OTRO'
AND IT.VENDOR_NBR NOT IN (18)
/*	AND FB.ITEM_NBR = '56335801'
	AND ST.FORMATO = 'MIBODEGA'*/
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16, 17,18,19,20,21,22,23,24
),

-- Consulta CTE_ALLOC
CTE_ALLOC AS
(
	SELECT
		ALLOC.ITEM_NBR,
		ALLOC.FORMATO,
		ALLOC.ALLOC_CAL_NAME,
		SUM(ALLOC.SAT) AS SAT,
		SUM(ALLOC.SUN) AS SUN,
		SUM(ALLOC.MON) AS MON,
		SUM(ALLOC.TUE) AS TUE,
		SUM(ALLOC.WED) AS WED,
		SUM(ALLOC.THU) AS THU,
		SUM(ALLOC.FRI) AS FRI

	FROM
	(
		SELECT
			T1.ITEM_NBR,
			T1.ALLOC_CAL_NAME AS ALLOC_CAL_NAME,
			CASE
			WHEN T4.TRAIT_NBR=297 THEN 'SUPERCENTER' 
			WHEN T4.TRAIT_NBR=9 THEN 'BODEGA'
			WHEN T4.TRAIT_NBR=11 THEN 'SUPERAMA'
			WHEN T4.TRAIT_NBR=1312 THEN 'MIBODEGA'
			WHEN T4.TRAIT_NBR IN (969,136) THEN 'BAE' ELSE 'OTRO' END AS FORMATO,
			CASE WHEN T3.SAT_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS SAT,
			CASE WHEN T3.SUN_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS SUN,
			CASE WHEN T3.MON_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS MON,
			CASE WHEN T3.TUE_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS TUE,
			CASE WHEN T3.WED_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS WED,
			CASE WHEN T3.THU_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS THU,
			CASE WHEN T3.FRI_MULT = 1 THEN  T2.DAILY_ALLOC_PCT ELSE 0 END AS FRI
		FROM
			MX_CF_REPL_VM.GRS_FULFILLMENT_PARM T1,
			MX_CF_REPL_VM.GRS_CAL T2,
			MX_CF_VM.CALENDAR_DAY T3,
			MX_CF_VM.TRAIT_STORE T4
		WHERE
			T1.ALLOC_CAL_NAME = T2.CAL_NAME
			AND T2.CAL_EFF_DATE = T3.GREGORIAN_DATE
			AND T1.STORE_NBR = T4.STORE_NBR
			AND T4.TRAIT_NBR IN (9,11,136,297,969,1312)
			AND T2.DAILY_ALLOC_PCT > 0 
		
		GROUP BY 1,2,3,4,5,6,7,8,9,10 ) AS ALLOC
	GROUP BY 1,2,3
),
	
FCST_B_P AS
(
	SELECT 
		CTE1.DEPT_NBR,
		CTE1.CAT_NBR, 
		CTE1.ITEM_NBR,
		CTE1.OLD_NBR,
		CTE1.REPL_GROUP_NBR,
		CTE1.UPC_NBR,
		CTE1.ITEM1_DESC,
		CTE1.TIPO_ART,
		CTE1.COSTO,
		CTE1.PRECIO,
		CTE1.PRECIO_IVA,
		CTE3.FORMATO,
		CTE1.FCST_WM_YR_WK,
		CTE1.WM_YR_WK,
		CTE1.WHSE_ALIGN,
		CTE1.FORECAST_BASE_EACHES,
		CTE1.FORECAST_PROMO_EACHES,
		CTE1.MARCAS_ESTRATEGICAS,
		CTE1.MES,
		CTE1.YM,
		CTE1.VENDOR_NBR,
		CTE1.WHPK_QTY,
		CTE1.VNPK_QTY,
		CTE1.CEDIS,
		CTE2.DIAS,
		CTE2.SAT_MULT,
		CTE2.SUN_MULT,
		CTE2.MON_MULT,
		CTE2.TUE_MULT,
		CTE2.WED_MULT,
		CTE2.THU_MULT,
		CTE2.FRI_MULT,
		CTE3.ALLOC_CAL_NAME,
		CTE3.SAT,
		CTE3.SUN,
		CTE3.MON,
		CTE3.TUE,
		CTE3.WED,
		CTE3.THU,
		CTE3.FRI,
		CTE1.REG_NIELSEN,
		CTE1.ESTADO
	FROM CTE_FCST CTE1  
	INNER JOIN CTE_CALENDAR CTE2 
		ON CTE1.WM_YR_WK = CTE2.WM_YR_WK
		AND CTE1.MES = CTE2.MES
	INNER JOIN CTE_ALLOC  CTE3 
		ON (CTE1.ITEM_NBR = CTE3.ITEM_NBR 
		AND CTE1.FORMATO = CTE3.FORMATO)
),

-- Se calculan los campos FCST_BASE_AJD y FCST_PROM_AJD para los casos en los que ALLOC_CAL_NAME = NULL
FCST_B_P_U AS
(
	SELECT * FROM
	(
		SELECT
			DEPT_NBR,
			CAT_NBR, 
			ITEM_NBR,
			OLD_NBR,
			REPL_GROUP_NBR,
			UPC_NBR,
			ITEM1_DESC,
			TIPO_ART,
			COSTO,
			PRECIO,
			PRECIO_IVA,
			FORMATO,
			FCST_WM_YR_WK,
			WM_YR_WK,
			WHSE_ALIGN,
			FORECAST_BASE_EACHES,
			FORECAST_PROMO_EACHES,
			DIAS,
			MARCAS_ESTRATEGICAS,
			MES,
			YM,
			VENDOR_NBR,
			WHPK_QTY,
			VNPK_QTY,
			REG_NIELSEN,
			ESTADO,
			CEDIS,
			SAT_MULT, SUN_MULT, MON_MULT, TUE_MULT, WED_MULT, THU_MULT, FRI_MULT,
			ALLOC_CAL_NAME,
			SAT, SUN, MON, TUE, WED, THU, FRI,
			0 AS PCT_WK,
			FORECAST_BASE_EACHES * (DIAS/7) AS FCST_BASE_AJD,
			FORECAST_PROMO_EACHES * (DIAS/7) AS FCST_PROM_AJD
	FROM FCST_B_P
		WHERE ALLOC_CAL_NAME IS NULL
	) AS A
	
	UNION 
	
	(
		SELECT
			DEPT_NBR,
			CAT_NBR, 
			ITEM_NBR,
			OLD_NBR,
			REPL_GROUP_NBR,
			UPC_NBR,
			ITEM1_DESC,
			TIPO_ART,
			COSTO,
			PRECIO,
			PRECIO_IVA,
			FORMATO,
			FCST_WM_YR_WK,
			WM_YR_WK,
			WHSE_ALIGN,
			FORECAST_BASE_EACHES,
			FORECAST_PROMO_EACHES,
			DIAS,
			MARCAS_ESTRATEGICAS,
			MES,
			YM,
			VENDOR_NBR,
			WHPK_QTY,
			VNPK_QTY,
			REG_NIELSEN,
			ESTADO,
			CEDIS,
			SAT_MULT, SUN_MULT, MON_MULT, TUE_MULT, WED_MULT, THU_MULT, FRI_MULT,
			ALLOC_CAL_NAME,
			SAT, SUN, MON, TUE, WED, THU, FRI,
			((SAT_MULT * SAT + SUN_MULT * SUN + MON_MULT * MON + TUE_MULT * TUE + WED_MULT * WED + THU_MULT * THU + FRI_MULT * FRI) /100.0) AS PCT_WK,
			FORECAST_BASE_EACHES * PCT_WK * 1 AS FCST_BASE_AJD,
			FORECAST_PROMO_EACHES * PCT_WK * 1 AS FCST_PROM_AJD
	FROM FCST_B_P
		WHERE ALLOC_CAL_NAME IS NOT NULL
	)
),

-- Sumarizacion de la consulta anterior sumando todos los registros de FCST_BASE_AJD y FCST_PROM_AJD respectivamente 
FCST_B_P_SUM AS 
(	
	SELECT
		MES,
		YM,
		VENDOR_NBR,
		DEPT_NBR,
		CAT_NBR, 
		ITEM_NBR, 
		MARCAS_ESTRATEGICAS,
		OLD_NBR,
		REPL_GROUP_NBR,
		UPC_NBR,
		ITEM1_DESC,
		TIPO_ART,
		COSTO,
		PRECIO,
		PRECIO_IVA,
		FORMATO,
		REG_NIELSEN,
		ESTADO,
		CEDIS,
		CAST(FORECAST_BASE_EACHES/WHPK_QTY AS DECIMAL(30,4)) AS FORECAST_BASE_WHPK ,
		CAST(FORECAST_BASE_EACHES/VNPK_QTY AS DECIMAL(30,4)) AS FORECAST_BASE_VNPK,
		CAST(PRECIO * FORECAST_BASE_EACHES AS DECIMAL(35,4)) AS FORECAST_BASE_COST,
		CAST(FORECAST_PROMO_EACHES/WHPK_QTY AS DECIMAL(30,4)) AS FORECAST_PROMO_WHPK ,
		CAST(FORECAST_PROMO_EACHES/VNPK_QTY AS DECIMAL(30,4)) AS FORECAST_PROMO_VNPK,
		CAST(PRECIO * FORECAST_PROMO_EACHES AS DECIMAL(35,4)) AS FORECAST_PROMO_COST,
		CAST (SUM(FCST_BASE_AJD) AS DECIMAL(25,4)) AS  FORECAST_BASE_EACHES,
		CAST (SUM(FCST_PROM_AJD) AS DECIMAL (25,4)) AS FORECAST_PROMO_EACHES
	FROM 
		FCST_B_P_U
	GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	)
	
	SELECT 
		VENDOR_NBR,
		DEPT_NBR,
		CAT_NBR, 
		MARCAS_ESTRATEGICAS,
		FORMATO,
		REG_NIELSEN,
		ESTADO,
		CEDIS,
		MES,
		YM,
		SUM(FORECAST_BASE_WHPK) AS FORECAST_BASE_WHPK,
		SUM(FORECAST_BASE_VNPK) AS FORECAST_BASE_VNPK,
		SUM(FORECAST_BASE_EACHES) AS  FORECAST_BASE_EACHES , 
		SUM(FORECAST_BASE_COST) AS FORECAST_BASE_COST,
		SUM(FORECAST_PROMO_EACHES) AS FORECAST_PROMO_EACHES, 
		SUM(FORECAST_PROMO_VNPK) AS FORECAST_PROMO_VNPK,
		SUM(FORECAST_PROMO_WHPK) AS FORECAST_PROMO_WHPK,
		SUM(FORECAST_PROMO_COST) AS FORECAST_PROMO_COST
	FROM FCST_B_P_SUM
	GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
